version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS:-http://+:5000}
      - Redis__ConnectionString=${REDIS_CONNECTION_STRING:-redis:6379}
      - JwtSettings__Key=${JWT_KEY:-your-super-secret-key-with-minimum-16-characters}
      - JwtSettings__Issuer=${JWT_ISSUER:-exchange-rate-api}
      - JwtSettings__Audience=${JWT_AUDIENCE:-exchange-rate-clients}
      - JwtSettings__ExpiryInMinutes=${JWT_EXPIRY_MINUTES:-60}
    depends_on:
      redis:
        condition: service_healthy
      prometheus:
        condition: service_started
      otel-collector:
        condition: service_started
    networks:
      - exchange-rate-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - exchange-rate-network
    
  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ["--config=/etc/otel-collector-config.yml"]
    ports:
      - "4317:4317"   # gRPC
      - "4318:4318"   # HTTP
      - "8889:8889"   # Prometheus scrape port (if configured)
    networks:
      - exchange-rate-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - exchange-rate-network
    depends_on:
      - otel-collector

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - exchange-rate-network

networks:
  exchange-rate-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data: 